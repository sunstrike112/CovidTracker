{"version":3,"sources":["components/GlobalLoading/GlobalLoading.module.css","page/NotFound/NotFound.module.css","components/GlobalLoading/index.jsx","redux/slices/globalSlice.js","page/SignIn/index.jsx","page/NotFound/index.jsx","utils/CheckLoggedIn/index.js","router/AuthRoute/AuthRoute.jsx","router/PrivateRoute/PrivateRoute.jsx","utils/FormatNumber/index.js","components/OverviewMap/index.jsx","utils/CreatePopup/index.js","utils/GetIso/index.js","components/OverviewLineChart/index.jsx","utils/CreateDataPicked/index.js","utils/FormatData/index.js","components/OverviewCard/CasesCard/index.jsx","components/OverviewCard/DeathsCard/index.jsx","components/OverviewCard/ActiveCasesCard/index.jsx","components/OverviewCard/RecoveredCard/index.jsx","utils/GetCovidData/index.js","components/OverviewCard/index.jsx","page/Home/index.jsx","App.jsx","reportWebVitals.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","GlobalLoading","initialState","selectedCocktail","isLoading","searchInput","globalSlice","createSlice","name","reducers","toggleLoading","state","action","addToCart","isDuplicateDrink","map","item","key","idDrink","payload","quantity","cart","strDrinkThumb","strDrink","push","removeFromCart","filteredCocktail","filter","increaseQuantity","decreaseQuantity","saveSearchInput","logOut","actions","reducer","LoginPage","props","useState","username","setUsername","password","setPassword","isLoggedIn","setIsLoggedIn","dispatch","useDispatch","history","useHistory","useEffect","GlobalActions","setTimeout","onSubmit","event","preventDefault","localStorage","setItem","className","onChange","inputUsername","target","value","inputPassword","type","PageNotFound","styles","pagenotfound","to","checkLoggedIn","getItem","AuthRoute","Component","component","rest","render","pathname","from","location","PrivateRoute","formatNumber","number","Intl","NumberFormat","format","mapboxgl","accessToken","OverviewMap","covidMap","useRef","loadMap","setLoadMap","data","useSWR","url","fetch","then","response","json","point","index","geometry","coordinates","longitude","latitude","properties","id","country","province","cases","stats","confirmed","deaths","recovered","Map","container","current","style","center","zoom","popup","Popup","closeButton","closeOnClick","addControl","NavigationControl","once","resize","addSource","features","addLayer","source","paint","on","position","getCanvas","cursor","slice","Math","abs","lngLat","lng","setLngLat","setHTML","countryISO","provinceHTML","countryFlagHTML","Boolean","createPopup","lookup","byCountry","iso2","toLowerCase","byInternet","getIso","addTo","remove","paragraph","rows","active","ref","OverviewLineChart","setCases","setDeaths","setRecovered","startDate","setStartDate","endDate","setEndDate","RangePicker","DatePicker","dataFull","concat","dataFiltered","blankArray","indexDatePicked","casesFiltered","deathsFiltered","recoveredFiltered","findIndex","element","time","createDataPicked","dataChart","axios","get","Object","entries","objectElement","category","formatCases","formatDeaths","formatRecovered","catch","alert","config","xField","yField","seriesField","yAxis","label","formatter","v","toFixed","color","legend","smooth","animation","appear","duration","length","placeholder","monent","date","replace","_","isEmpty","CasesCard","covidData","todayCases","setTodayCases","casesPerMillion","setCasesPerMillion","casesPerOneMillion","title","DeathsCard","todayDeaths","setTodayDeaths","deathsPerMillion","setDeathsPerMillion","deathsPerOneMillion","ActiveCasesCard","activeCases","setActiveCases","activeCasesPerMillion","setActiveCasesPerMillion","criticalCases","setCriticalCases","activePerOneMillion","critical","RecoveredCard","todayRecovered","setTodayRecovered","recoveredPerMillion","setRecoveredPerMillion","recoveredPerOneMillion","getCovidData","Promise","resolve","OverviewCard","setCovidData","a","handleCovidData","Home","App","path","SignIn","exact","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","GlobalReducer","middleware","getDefaultMiddleware","logger","store","configureStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.083a81e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading\":\"GlobalLoading_Loading__2yZxm\",\"c2\":\"GlobalLoading_c2__3S_NA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagenotfound\":\"NotFound_pagenotfound__2GEN4\"};","import React from 'react';\r\nimport { useSelector }  from 'react-redux'\r\n\r\nimport styles from './GlobalLoading.module.css'\r\n\r\nfunction GlobalLoading(props) {\r\n  const isLoading = useSelector(state => state.GlobalReducer.isLoading)\r\n\r\n  if (isLoading) {\r\n    return <div className={styles.Loading}>Loading...</div>\r\n  }\r\n  return null\r\n}\r\n\r\nexport default GlobalLoading;","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  selectedCocktail: [],\n  isLoading: false,\n  searchInput: '',\n};\n\nconst globalSlice = createSlice({\n  name: 'globalSlice',\n  initialState: initialState,\n  reducers: {\n    toggleLoading(state, action) {\n      state.isLoading = !state.isLoading;\n    },\n    addToCart(state, action) {\n      if (!state.selectedCocktail) {\n        let cart = {\n          idDrink: action.payload.idDrink,\n          quantity: 1,\n          strDrinkThumb: action.payload.strDrinkThumb,\n          strDrink: action.payload.strDrink,\n        };\n        state.selectedCocktail.push(cart);\n      } else {\n        let isDuplicateDrink = false;\n        state.selectedCocktail.map((item, key) => {\n          if (item.idDrink == action.payload.idDrink) {\n            state.selectedCocktail[key].quantity++;\n            isDuplicateDrink = true;\n          }\n        });\n        if (!isDuplicateDrink) {\n          let cart = {\n            idDrink: action.payload.idDrink,\n            quantity: 1,\n            strDrinkThumb: action.payload.strDrinkThumb,\n            strDrink: action.payload.strDrink,\n          };\n          state.selectedCocktail.push(cart);\n        }\n      }\n    },\n    removeFromCart(state, action) {\n      const filteredCocktail = state.selectedCocktail.filter(\n        (item) => item.idDrink !== action.payload\n      );\n      state.selectedCocktail = filteredCocktail;\n    },\n    increaseQuantity(state, action) {\n      state.selectedCocktail.map((item, key) => {\n        if (item.idDrink == action.payload)\n          state.selectedCocktail[key].quantity++;\n      });\n    },\n    decreaseQuantity(state, action) {\n      state.selectedCocktail.map((item, key) => {\n        if (item.idDrink == action.payload)\n          state.selectedCocktail[key].quantity--;\n      });\n      const filteredCocktail = state.selectedCocktail.filter(\n        (item) => item.quantity > 0\n      );\n      state.selectedCocktail = filteredCocktail;\n    },\n    saveSearchInput(state, action) {\n      state.searchInput = action.payload;\n    },\n    logOut(state, action) {\n      return initialState;\n    },\n  },\n});\n\nconst { actions, reducer } = globalSlice;\nexport { actions as GlobalActions, reducer as GlobalReducer };\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { GlobalActions } from '../../redux/slices/globalSlice';\r\nimport './SingIn.css';\r\n\r\nfunction LoginPage(props) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(GlobalActions.toggleLoading());\r\n    setTimeout(() => {\r\n      dispatch(GlobalActions.toggleLoading());\r\n    }, 2000);\r\n  }, []);\r\n\r\n  const handleUsername = (inputUsername) => {\r\n    setUsername(inputUsername.target.value);\r\n  };\r\n\r\n  const handlePassword = (inputPassword) => {\r\n    setPassword(inputPassword.target.value);\r\n  };\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault();\r\n    if (username !== '' && password !== '') {\r\n      if (username === 'admin' && password === 'admin') {\r\n        localStorage.setItem('username', username);\r\n        localStorage.setItem('password', password);\r\n        history.push('/');\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleLogin} className=\"signin\">\r\n      <div>\r\n        <div>\r\n          <label>Username</label>\r\n          <input onChange={handleUsername} />\r\n        </div>\r\n        <div>\r\n          <label>Password</label>\r\n          <input onChange={handlePassword} type=\"password\" />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">Log In</button>\r\n          {!isLoggedIn && (\r\n            <div className=\"warning\">\r\n              Please enter correct username and password\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from './NotFound.module.css';\r\n\r\nfunction PageNotFound() {\r\n  return (\r\n    <div className={styles.pagenotfound}>\r\n      <h1>Page Not Found</h1>\r\n      <p>\r\n        Please check your URL and make sure that the address entered is correct\r\n      </p>\r\n      <Link to=\"/signin\">\r\n        <button type=\"button\">Back</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","const checkLoggedIn = () => {\r\n  const username = localStorage.getItem('username');\r\n  const password = localStorage.getItem('password');\r\n  if (username && password) return true;\r\n  return false;\r\n};\r\n\r\nexport { checkLoggedIn };\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nimport { checkLoggedIn } from '../../utils/CheckLoggedIn/index';\r\n\r\nfunction AuthRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <div>\r\n      <Route\r\n        {...rest}\r\n        render={(props) => {\r\n          return checkLoggedIn() === false ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthRoute;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nimport { checkLoggedIn } from '../../utils/CheckLoggedIn/index';\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <div>\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          checkLoggedIn() ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{ pathname: '/signin', state: { from: props.location } }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","const formatNumber = (number) => {\r\n  return new Intl.NumberFormat('de-DE').format(number);\r\n};\r\n\r\nexport { formatNumber };\r\n","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport { Skeleton } from 'antd';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport useSWR from 'swr';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nimport './OverviewMap.scss';\r\nimport { getIso } from '../../utils/GetIso/index';\r\nimport { createPopup } from '../../utils/CreatePopup/index';\r\n\r\nmapboxgl.accessToken = `pk.eyJ1Ijoic3Vuc3RyaWtlMTEyIiwiYSI6ImNrcXV4OTY2djA2bDIydXBjNHZobTBtbzMifQ.BYCyLBgyOMbG7eycxXX_6A`;\r\n\r\nfunction OverviewMap() {\r\n  const covidMap = useRef(null);\r\n  const [loadMap, setLoadMap] = useState(false);\r\n  const getDataMap = (url) =>\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) =>\r\n        data.map((point, index) => ({\r\n          type: 'Feature',\r\n          geometry: {\r\n            type: 'Point',\r\n            coordinates: [\r\n              point.coordinates.longitude,\r\n              point.coordinates.latitude,\r\n            ],\r\n          },\r\n          properties: {\r\n            id: index,\r\n            country: point.country,\r\n            province: point.province,\r\n            cases: point.stats.confirmed,\r\n            deaths: point.stats.deaths,\r\n            recovered: point.stats.recovered,\r\n          },\r\n        }))\r\n      );\r\n  const { data } = useSWR('https://disease.sh/v3/covid-19/jhucsse', getDataMap);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (data) {\r\n        const map = new mapboxgl.Map({\r\n          container: covidMap.current,\r\n          style: 'mapbox://styles/notalemesa/ck8dqwdum09ju1ioj65e3ql3k',\r\n          center: [110, 15],\r\n          zoom: 3,\r\n        });\r\n        const popup = new mapboxgl.Popup({\r\n          closeButton: false,\r\n          closeOnClick: false,\r\n        });\r\n        map.addControl(new mapboxgl.NavigationControl());\r\n        map.once('load', function () {\r\n          map.resize();\r\n          map.addSource('points', {\r\n            type: 'geojson',\r\n            data: {\r\n              type: 'FeatureCollection',\r\n              features: data,\r\n            },\r\n          });\r\n          map.addLayer({\r\n            id: 'circles',\r\n            source: 'points',\r\n            type: 'circle',\r\n            paint: {\r\n              'circle-opacity': 0.5,\r\n              'circle-stroke-width': [\r\n                'interpolate',\r\n                ['linear'],\r\n                ['get', 'cases'],\r\n                1,\r\n                1,\r\n                1000,\r\n                1.25,\r\n                4000,\r\n                1.5,\r\n                8000,\r\n                1.75,\r\n                12000,\r\n                2,\r\n                100000,\r\n                2.5,\r\n              ],\r\n              'circle-radius': [\r\n                'interpolate',\r\n                ['linear'],\r\n                ['get', 'cases'],\r\n                1,\r\n                6,\r\n                1000,\r\n                6,\r\n                50000,\r\n                6,\r\n                150000,\r\n                8,\r\n                200000,\r\n                10,\r\n                500000,\r\n                12,\r\n                1000000,\r\n                16,\r\n              ],\r\n              'circle-color': [\r\n                'interpolate',\r\n                ['linear'],\r\n                ['get', 'cases'],\r\n                1,\r\n                '#ffffb2',\r\n                1000,\r\n                '#fed976',\r\n                50000,\r\n                '#feb24c',\r\n                75000,\r\n                '#fd8d3c',\r\n                150000,\r\n                '#fc4e2a',\r\n                200000,\r\n                '#e31a1c',\r\n                500000,\r\n                '#b10026',\r\n                1000000,\r\n                '#36030e',\r\n              ],\r\n            },\r\n          });\r\n          map.on('mousemove', 'circles', (position) => {\r\n            const { cases, deaths, recovered, country, province } =\r\n              position.features[0].properties;\r\n            map.getCanvas().style.cursor = 'pointer';\r\n            const coordinates =\r\n              position.features[0].geometry.coordinates.slice();\r\n            while (Math.abs(position.lngLat.lng - coordinates[0]) > 180) {\r\n              coordinates[0] +=\r\n                position.lngLat.lng > coordinates[0] ? 360 : -360;\r\n            }\r\n            popup\r\n              .setLngLat(coordinates)\r\n              .setHTML(\r\n                createPopup(\r\n                  cases,\r\n                  deaths,\r\n                  recovered,\r\n                  country,\r\n                  province,\r\n                  getIso(country)\r\n                )\r\n              )\r\n              .addTo(map);\r\n          });\r\n          map.on('mouseleave', 'circles', function () {\r\n            map.getCanvas().style.cursor = '';\r\n            popup.remove();\r\n          });\r\n        });\r\n      }\r\n      setLoadMap(true);\r\n    }, 3000);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {loadMap == false ? (\r\n        <Skeleton className=\"mapskeleton\" paragraph={{ rows: 16 }} active />\r\n      ) : (\r\n        <div className=\"overviewmap\">\r\n          <div ref={covidMap}></div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OverviewMap;\r\n","import { formatNumber } from '../FormatNumber';\r\n\r\nconst createPopup = (\r\n  cases,\r\n  deaths,\r\n  recovered,\r\n  country,\r\n  province,\r\n  countryISO\r\n) => {\r\n  const provinceHTML =\r\n    province !== 'null' ? `<p>Tỉnh/Bang: <b>${province}</b></p>` : '';\r\n  const countryFlagHTML = Boolean(countryISO)\r\n    ? `<img src=\"https://www.countryflags.io/${countryISO}/flat/64.png\"></img>`\r\n    : '';\r\n  const popUp = `\r\n      <p>Quốc gia: <b>${country}</b></p>\r\n      ${provinceHTML}\r\n      <p>Nhiếm bệnh: <b>${formatNumber(cases)}</b></p>\r\n      <p>Tử vong: <b>${formatNumber(deaths)}</b></p>\r\n      <p>Đã khỏi: <b>${formatNumber(recovered)}</b></p>\r\n      ${countryFlagHTML}\r\n    `;\r\n  return popUp;\r\n};\r\n\r\nexport { createPopup };\r\n","import lookup from 'country-code-lookup';\r\n\r\nconst getIso = (country) => {\r\n  let countryISO =\r\n    lookup.byCountry(country)?.iso2.toLowerCase() ||\r\n    lookup.byInternet(country)?.iso2.toLowerCase();\r\n  if (country == 'Burma') countryISO = 'mm';\r\n  if (country == 'Korea, South') countryISO = 'kr';\r\n  if (country == 'Taiwan*') countryISO = 'tw';\r\n  if (country == 'Congo (Brazzaville)' || country == 'Congo (Kinshasa)')\r\n    countryISO = 'cg';\r\n  if (country == 'Micronesia') countryISO = 'fm';\r\n  return countryISO;\r\n};\r\n\r\nexport { getIso };\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Line } from '@ant-design/charts';\r\nimport { DatePicker, Skeleton } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\nimport './OverviewLineChart.scss';\r\nimport {\r\n  formatCases,\r\n  formatDeaths,\r\n  formatRecovered,\r\n} from '../../utils/FormatData/index';\r\nimport { createDataPicked } from '../../utils/CreateDataPicked/index';\r\n\r\nfunction OverviewLineChart(props) {\r\n  const [cases, setCases] = useState([]);\r\n  const [deaths, setDeaths] = useState([]);\r\n  const [recovered, setRecovered] = useState([]);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const { RangePicker } = DatePicker;\r\n  let dataFull = cases.concat(deaths, recovered);\r\n  let dataFiltered = createDataPicked(\r\n    startDate,\r\n    endDate,\r\n    cases,\r\n    deaths,\r\n    recovered\r\n  );\r\n  let dataChart = startDate !== '' ? dataFiltered : dataFull;\r\n\r\n  useEffect(() => {\r\n    const getCovidData = () => {\r\n      axios\r\n        .get(`https://disease.sh/v3/covid-19/historical/all?lastdays=all`)\r\n        .then((response) => {\r\n          setCases(formatCases(response.data.cases));\r\n          setDeaths(formatDeaths(response.data.deaths));\r\n          setRecovered(formatRecovered(response.data.recovered));\r\n        })\r\n        .catch(() => {\r\n          alert(`Request to API failed, Please try again !!!`);\r\n        });\r\n    };\r\n\r\n    getCovidData();\r\n  }, []);\r\n\r\n  const config = {\r\n    data: dataChart,\r\n    xField: 'time',\r\n    yField: 'value',\r\n    seriesField: 'category',\r\n    yAxis: {\r\n      label: {\r\n        formatter: function formatter(v) {\r\n          return ''.concat((v / 1000000).toFixed(0), 'M');\r\n        },\r\n      },\r\n    },\r\n    color: ['#1979C9', '#D62A0D', '#33fa19'],\r\n    legend: { position: 'top' },\r\n    smooth: true,\r\n    animation: {\r\n      appear: {\r\n        animation: 'path-in',\r\n        duration: 5000,\r\n      },\r\n    },\r\n  };\r\n\r\n  const handleDatePicker = (monent, date) => {\r\n    if (date) {\r\n      setStartDate(date[0].replace(/(^|-)0+/g, '$1').replace(/-/g, '/'));\r\n      setEndDate(date[1].replace(/(^|-)0+/g, '$1').replace(/-/g, '/'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"overviewlinechart\">\r\n        <p>\r\n          Diễn biến dịch covid trên thế giới từ&nbsp;\r\n          {startDate ? startDate : '1/22/20'} đến&nbsp;\r\n          {endDate ? endDate : cases[cases.length - 1]?.time}\r\n        </p>\r\n        <RangePicker\r\n          className=\"rangepicker\"\r\n          format=\"MM-DD-YY\"\r\n          placeholder={[\r\n            '1/22/20',\r\n            endDate ? endDate : cases[cases.length - 1]?.time,\r\n          ]}\r\n          onChange={handleDatePicker}\r\n        />\r\n        {_.isEmpty(recovered) ? (\r\n          <Skeleton className=\"lineskeleton\" paragraph={{ rows: 10 }} active />\r\n        ) : (\r\n          <Line className=\"linechart\" {...config} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OverviewLineChart;\r\n","const createDataPicked = (startDate, endDate, cases, deaths, recovered) => {\r\n  let blankArray = [[], [], [], []];\r\n  let [indexDatePicked, casesFiltered, deathsFiltered, recoveredFiltered] =\r\n    blankArray;\r\n  if (startDate !== '' && endDate !== '') {\r\n    indexDatePicked.push(\r\n      cases?.findIndex((element) => element.time == startDate),\r\n      cases?.findIndex((element) => element.time == endDate)\r\n    );\r\n    casesFiltered = cases?.filter(\r\n      (element, index) =>\r\n        index >= indexDatePicked[0] && index <= indexDatePicked[1]\r\n    );\r\n    deathsFiltered = deaths?.filter(\r\n      (element, index) =>\r\n        index >= indexDatePicked[0] && index <= indexDatePicked[1]\r\n    );\r\n    recoveredFiltered = recovered?.filter(\r\n      (element, index) =>\r\n        index >= indexDatePicked[0] && index <= indexDatePicked[1]\r\n    );\r\n  }\r\n  return casesFiltered.concat(deathsFiltered, recoveredFiltered);\r\n};\r\n\r\nexport { createDataPicked };\r\n","import { formatNumber } from '../FormatNumber';\r\n\r\nconst formatCases = (cases) => {\r\n  return Object.entries(cases).map((element, key) => {\r\n    const [time, value, category] = element;\r\n    const objectElement = { time, value, category };\r\n    objectElement.category = 'Số ca nhiễm';\r\n    formatNumber(objectElement.value);\r\n    return objectElement;\r\n  });\r\n};\r\n\r\nconst formatDeaths = (deaths) => {\r\n  return Object.entries(deaths).map((element, key) => {\r\n    const [time, value, category] = element;\r\n    const objectElement = { time, value, category };\r\n    objectElement.category = 'Tử vong';\r\n    formatNumber(objectElement.value);\r\n    return objectElement;\r\n  });\r\n};\r\n\r\nconst formatRecovered = (recovered) => {\r\n  return Object.entries(recovered).map((element, key) => {\r\n    const [time, value, category] = element;\r\n    const objectElement = { time, value, category };\r\n    objectElement.category = 'Đã khỏi';\r\n    formatNumber(objectElement.value);\r\n    return objectElement;\r\n  });\r\n};\r\n\r\nexport { formatCases };\r\nexport { formatDeaths };\r\nexport { formatRecovered };\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Card, Skeleton } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport _ from 'lodash';\r\n\r\nimport { formatNumber } from '../../../utils/FormatNumber/index';\r\n\r\nfunction CasesCard(props) {\r\n  const { covidData } = props;\r\n  const [cases, setCases] = useState(0);\r\n  const [todayCases, setTodayCases] = useState(0);\r\n  const [casesPerMillion, setCasesPerMillion] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setCases(formatNumber(covidData?.cases));\r\n    setTodayCases(formatNumber(covidData?.todayCases));\r\n    setCasesPerMillion(formatNumber(covidData?.casesPerOneMillion));\r\n  }, [covidData]);\r\n\r\n  return (\r\n    <Card title=\"Số ca\">\r\n      {!_.isEmpty(covidData) ? (\r\n        <>\r\n          <p>{cases}</p>\r\n          <p>\r\n            +{todayCases} <br></br>\r\n            <span>ca/ngày</span>\r\n          </p>\r\n          <p>\r\n            ~ {casesPerMillion}\r\n            <span>/1M</span>\r\n          </p>\r\n        </>\r\n      ) : (\r\n        <Skeleton className=\"cardskeleton\" active />\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CasesCard;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Card, Skeleton } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport _ from 'lodash';\r\n\r\nimport { formatNumber } from '../../../utils/FormatNumber/index';\r\n\r\nfunction DeathsCard(props) {\r\n  const { covidData } = props;\r\n  const [deaths, setDeaths] = useState(0);\r\n  const [todayDeaths, setTodayDeaths] = useState(0);\r\n  const [deathsPerMillion, setDeathsPerMillion] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setDeaths(formatNumber(covidData.deaths));\r\n    setTodayDeaths(formatNumber(covidData.todayDeaths));\r\n    setDeathsPerMillion(formatNumber(covidData.deathsPerOneMillion));\r\n  }, [covidData]);\r\n\r\n  return (\r\n    <Card title=\"Tử vong\">\r\n      {!_.isEmpty(covidData) ? (\r\n        <>\r\n          <p>{deaths}</p>\r\n          <p>\r\n            +{todayDeaths} <br></br>\r\n            <span>ca/ngày</span>\r\n          </p>\r\n          <p>\r\n            ~ {deathsPerMillion}\r\n            <span>/1M</span>\r\n          </p>\r\n        </>\r\n      ) : (\r\n        <Skeleton className=\"cardskeleton\" active />\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default DeathsCard;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Card, Skeleton } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport _ from 'lodash';\r\n\r\nimport { formatNumber } from '../../../utils/FormatNumber/index';\r\n\r\nfunction ActiveCasesCard(props) {\r\n  const { covidData } = props;\r\n  const [activeCases, setActiveCases] = useState(0);\r\n  const [activeCasesPerMillion, setActiveCasesPerMillion] = useState(0);\r\n  const [criticalCases, setCriticalCases] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setActiveCases(formatNumber(covidData.active));\r\n    setActiveCasesPerMillion(formatNumber(covidData.activePerOneMillion));\r\n    setCriticalCases(formatNumber(covidData.critical));\r\n  }, [covidData]);\r\n\r\n  return (\r\n    <Card title=\"Điều trị\">\r\n      {!_.isEmpty(covidData) ? (\r\n        <>\r\n          <p>{activeCases}</p>\r\n          <p>\r\n            {criticalCases}\r\n            <br></br>\r\n            <span>nguy kịch</span>\r\n          </p>\r\n          <p>\r\n            ~ {activeCasesPerMillion}\r\n            <span>/1M</span>\r\n          </p>\r\n        </>\r\n      ) : (\r\n        <Skeleton className=\"cardskeleton\" active />\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ActiveCasesCard;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Card, Skeleton } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport _ from 'lodash';\r\n\r\nimport { formatNumber } from '../../../utils/FormatNumber/index';\r\n\r\nfunction RecoveredCard(props) {\r\n  const { covidData } = props;\r\n  const [recovered, setRecovered] = useState(0);\r\n  const [todayRecovered, setTodayRecovered] = useState(0);\r\n  const [recoveredPerMillion, setRecoveredPerMillion] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setRecovered(formatNumber(covidData.recovered));\r\n    setTodayRecovered(formatNumber(covidData.todayRecovered));\r\n    setRecoveredPerMillion(formatNumber(covidData.recoveredPerOneMillion));\r\n  }, [covidData]);\r\n\r\n  return (\r\n    <Card title=\"Đã khỏi\">\r\n      {!_.isEmpty(covidData) ? (\r\n        <>\r\n          <p>{recovered}</p>\r\n          <p>\r\n            +{todayRecovered} <br></br>\r\n            <span>ca/ngày</span>\r\n          </p>\r\n          <p>\r\n            ~{recoveredPerMillion}\r\n            <span>/1M</span>\r\n          </p>\r\n        </>\r\n      ) : (\r\n        <Skeleton className=\"cardskeleton\" active />\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default RecoveredCard;\r\n","import axios from 'axios';\r\n\r\nconst getCovidData = (url) => {\r\n  return new Promise((resolve) => {\r\n    axios\r\n      .get(`${url}`)\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      .catch(() => {\r\n        alert(`Request to API failed, Please try again !!!`);\r\n      });\r\n  });\r\n};\r\n\r\nexport { getCovidData };\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nimport './OverviewCard.scss';\r\nimport CasesCard from './CasesCard';\r\nimport DeathsCard from './DeathsCard';\r\nimport ActiveCasesCard from './ActiveCasesCard';\r\nimport RecoveredCard from './RecoveredCard';\r\nimport { getCovidData } from '../../utils/GetCovidData/index';\r\n\r\nfunction OverviewCard(props) {\r\n  const [covidData, setCovidData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const handleCovidData = async () => {\r\n      setCovidData(await getCovidData(`https://disease.sh/v3/covid-19/all`));\r\n    };\r\n    handleCovidData();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"overviewcard\">\r\n        <CasesCard covidData={covidData} />\r\n        <DeathsCard covidData={covidData} />\r\n        <ActiveCasesCard covidData={covidData} />\r\n        <RecoveredCard covidData={covidData} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OverviewCard;\r\n","import React from 'react';\r\n\r\nimport OverviewMap from '../../components/OverviewMap';\r\nimport OverviewLineChart from '../../components/OverviewLineChart';\r\nimport OverviewCard from '../../components/OverviewCard';\r\nimport './Home.scss';\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"home\">\r\n      <OverviewCard />\r\n      <OverviewMap />\r\n      <OverviewLineChart />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport GlobalLoading from './components/GlobalLoading';\nimport SignIn from './page/SignIn';\nimport NotFound from './page/NotFound/index';\nimport AuthRoute from './router/AuthRoute/AuthRoute';\nimport PrivateRoute from './router/PrivateRoute/PrivateRoute';\nimport Home from './page/Home';\n\nfunction App() {\n  return (\n    <>\n      <Router className=\"App\">\n        <Switch>\n          <AuthRoute path=\"/signin\" component={SignIn} />\n          <PrivateRoute exact path=\"/\" component={Home} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { GlobalReducer } from './slices/globalSlice';\n\nconst rootReducer = combineReducers({\n  GlobalReducer\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nimport rootReducer from './rootReducer';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}